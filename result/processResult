import json

import pandas as pd
import yaml
import numpy as np


def sum_time(tries):
    ov_time = [try_['overall_time'] for try_ in tries.values()]
    etl_time = [try_['etl_processing_time'] for try_ in tries.values()]
    ov_time = np.sort(ov_time)[1:-1]
    etl_time = np.sort(etl_time)[1:-1]

    return np.average(etl_time), np.std(etl_time), np.average(ov_time), np.std(ov_time)


if __name__ == '__main__':

    with open('data.txt') as of:
        lines = of.readlines()

    dstr = "data:\n"
    dstr += "".join(["  " + line for line in lines])
    dct = yaml.safe_load(dstr)

    l_udf_r = dct['data']
    k = ['udf'] + list(l_udf_r[0]['scenario'].keys()) + ['etl', 'etl_std', 'ov_time', 'std']
    print(", ".join(k))
    x = []
    for udf_r in l_udf_r:
        etl_time, etl_std, aq_time, ov_time = sum_time(udf_r['tries'])

        d = [udf_r['udf']] + list(udf_r['scenario'].values()) + ['{0:.2f}'.format(etl_time), '{0:.2f}'.format(etl_std), '{0:.2f}'.format(aq_time), '{0:.2f}'.format(ov_time)]
        x.append(", ".join([str(_) for _ in d]))

    print("\n".join(x))

    # df = pd.DataFrame(x, columns=k)
    # print(df.sort_values(by=['udf', 'rep_factor', 'java_xms']))
